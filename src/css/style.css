html{line-height:1.15}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}:root{font-size:16px;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}html{-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body,html{-webkit-box-sizing:border-box;box-sizing:border-box;min-width:320px;max-width:100%;margin:0;padding:0;line-height:1.2;background-color:transparent}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit;overflow-wrap:break-word;word-wrap:break-word;word-break:break-word;-webkit-hyphens:auto;-ms-hyphens:auto;hyphens:auto}audio,img,video{max-width:100%;height:auto}button,input,label,optgroup,select{font:inherit;color:inherit}textarea{font:inherit}button{overflow:visible;margin:0;padding:0;border:none;text-transform:none;background-color:transparent}button,input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring{outline:1px dotted ButtonText}img:not([alt]),img[alt=""]{outline:2px solid red}input:focus::-webkit-input-placeholder,textarea:focus::-webkit-input-placeholder{color:transparent}input:focus:-ms-input-placeholder,textarea:focus:-ms-input-placeholder{color:transparent}input:focus::-ms-input-placeholder,textarea:focus::-ms-input-placeholder{color:transparent}input:focus::placeholder,textarea:focus::placeholder{color:transparent}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;-moz-appearance:none;appearance:none;height:auto;margin:0;padding:0}input[type=search]{-webkit-appearance:textfield}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none;-moz-appearance:none;appearance:none}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}.visually-hidden:not(:focus):not(:active){position:absolute!important;clip:rect(1px 1px 1px 1px);-webkit-clip-path:inset(100%);clip-path:inset(100%);height:1px!important;width:1px!important;padding:0!important;margin:-1px!important;border:0!important;white-space:nowrap!important;overflow:hidden!important}.clearfix:after{visibility:hidden;content:"";display:table;height:0;clear:both;font-size:0;zoom:1}.page{font-family:Arial,Helvetica,sans-serif;background-color:#f4f4f4}.page__wrapper{max-width:1000px;min-width:940px;margin:0 auto;padding:0 20px}.main-logo{display:inline-block;vertical-align:middle;font-size:0}.main-header{position:relative;padding:37px 0 20px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.main-header:before{content:"";display:block;position:absolute;top:0;left:0;right:0;height:17px;background-color:#090909}.main-header__logo{float:left}.main-header__wrapper{float:right;position:relative;height:100px}.main-header__wrapper:before{content:"";height:100%}.main-header__email,.main-header__nav,.main-header__wrapper:before{display:inline-block;vertical-align:middle}.main-header__email{font-family:inherit;position:absolute;right:0;top:0;font-size:14px;font-weight:400;text-decoration:none;color:#999898}.main-header__email:focus,.main-header__email:hover{color:#686767}.main-nav__list{list-style:none;margin:0;padding:0}.main-nav__item{float:left;margin-right:64px;color:#fe9b00}.main-nav__item--current{color:#090909}.main-nav__item:last-child{margin-right:0}.main-nav__link{font-family:inherit;display:block;text-decoration:none;text-transform:uppercase;font-size:12px;font-weight:600;color:inherit}.main-nav__link:hover{color:#333}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
